<Window x:Class="VisualMutator.Views.MutantsCreationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:Operators="clr-namespace:VisualMutator.Model.Mutations.Operators"
        xmlns:Converters="clr-namespace:VisualMutator.Views.Converters" xmlns:Views="clr-namespace:VisualMutator.Views"
        xmlns:Types="clr-namespace:VisualMutator.Model.Mutations.Types"
        xmlns:ViewModels="clr-namespace:VisualMutator.ViewModels"
        xmlns:extToolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit/extended" mc:Ignorable="d"
        d:DesignHeight="300" d:DesignWidth="300" Width="800" Height="600" 
        Title="Visual Mutator - New Mutation Session" WindowStartupLocation="CenterOwner" >

  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Resources/Global.xaml"/>
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </Window.Resources>

  <Grid d:DataContext="{d:DesignInstance ViewModels:MutantsCreationViewModel}">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition/>
      <ColumnDefinition/>

    </Grid.ColumnDefinitions>

    <Grid.Resources>

      <HierarchicalDataTemplate DataType="{x:Type Types:AssemblyNode}" ItemsSource="{Binding Path=Children}">
        <DockPanel>
          <Image Source="Resources/assembly.png"/>
          <CheckBox IsChecked="{Binding IsIncluded}"/>
          <TextBlock Text="{Binding Name}"/>
        </DockPanel>

      </HierarchicalDataTemplate>

      <HierarchicalDataTemplate DataType="{x:Type Types:TypeNamespaceNode}" ItemsSource="{Binding Path=Children}">
        <DockPanel>
          <Image Source="Resources/namespace.png"/>
          <CheckBox IsChecked="{Binding IsIncluded}"/>
          <TextBlock Text="{Binding Name}"/>
        </DockPanel>

      </HierarchicalDataTemplate>

      <DataTemplate DataType="{x:Type Types:TypeNode}">
        <DockPanel>
          <Image Source="Resources/type.png"/>
          <CheckBox IsChecked="{Binding IsIncluded}"/>
          <TextBlock Text="{Binding Name}"/>
        </DockPanel>
      </DataTemplate>

      <HierarchicalDataTemplate DataType="{x:Type Operators:PackageNode}" ItemsSource="{Binding Operators}">

        <DockPanel>
          <Image Source="Resources/mutation.png"/>
          <CheckBox IsChecked="{Binding IsIncluded}"/>
          <TextBlock Text="{Binding Name}" ToolTip="{Binding OperatorsPack.Description}"/>
        </DockPanel>

      </HierarchicalDataTemplate>

      <DataTemplate DataType="{x:Type Operators:OperatorNode}">
        <DockPanel>
          <Image Source="Resources/mutation.png"/>
          <CheckBox IsChecked="{Binding IsIncluded}"/>
          <TextBlock Text="{Binding Name}" ToolTip="{Binding Operator.Description}"/>
        </DockPanel>

      </DataTemplate>


            <LinearGradientBrush x:Key="NormalBrush" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#EEE" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#CCC" Offset="0.0"/>
                <GradientStop Color="#444" Offset="1.0"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="GlyphBrush" Color="#444"/>
            <LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#AAA" Offset="1.0"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="PressedBrush" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#BBB" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="0.1"/>
                <GradientStop Color="#EEE" Offset="0.9"/>
                <GradientStop Color="#FFF" Offset="1.0"/>
            </LinearGradientBrush>

            <ControlTemplate x:Key="newToggleButtonControlTemplate" TargetType="{x:Type ToggleButton}">
                <Grid Background="{TemplateBinding Background}">
                    <Rectangle
                    x:Name="Rectangle"
                    Margin="0,0,0,0"
                    Fill="Transparent"
                    Stroke="{DynamicResource NormalBorderBrush}"
                />
                    <Path
                    x:Name="Up_Arrow"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Fill="{DynamicResource GlyphBrush}"
                    Data="M 0 0 L 4 4 L 8 0 Z"
                />
                    <Path
                    x:Name="Down_Arrow"
                    Visibility="Collapsed"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Fill="{DynamicResource GlyphBrush}"
                    Data="M 0 4 L 4 0 L 8 4 Z"
                />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Fill" Value="{DynamicResource MouseOverBrush}" TargetName="Rectangle"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter Property="Fill" Value="{DynamicResource PressedBrush}" TargetName="Rectangle"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter Property="Visibility" Value="Visible" TargetName="Down_Arrow"/>
                        <Setter Property="Visibility" Value="Collapsed" TargetName="Up_Arrow"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="newExpanderStyle" TargetType="{x:Type Expander}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*" x:Name="ContentRow"/>
                                </Grid.RowDefinitions>
                                <Border
                                x:Name="Border"
                                Grid.Row="0"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2,2,0,0"
                            >
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="20"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <ToggleButton
                                        Template="{DynamicResource newToggleButtonControlTemplate}"
                                        Background="{TemplateBinding Background}"
                                        IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        OverridesDefaultStyle="True"
                                    />
                                        <ContentPresenter Grid.Column="1" Margin="4" RecognizesAccessKey="True" ContentSource="Header"/>
                                    </Grid>
                                </Border>
                                <Border
                                x:Name="ExpandSite"
                                Grid.Row="1"
                                Visibility="Collapsed"
                                BorderThickness="1,0,1,1"
                                CornerRadius="0,0,2,2"
                            >
                                    <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Margin="{TemplateBinding Padding}"
                                    Focusable="false"
                                />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="True">
                                    <Setter Property="Visibility" Value="Visible" TargetName="ExpandSite"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



        </Grid.Resources>

    <TextBlock Grid.Column="0" Grid.Row="0" Text="Types in solution:"/>
    <TextBlock Grid.Column="1" Grid.Row="0" Text="Available mutations:"/>

    <TreeView Grid.Column="0" Grid.Row="1" ItemsSource="{Binding Assemblies}"/>

    <Views:ProgressControl Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                           Visibility="{Binding Assemblies, Converter={Converters:NullToVisibilityConverter}}"/>

    <TreeView Grid.Column="1" Grid.Row="1" ItemsSource="{Binding MutationPackages}"/>

    <Views:ProgressControl Grid.Column="1" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                           Visibility="{Binding MutationPackages, Converter={Converters:NullToVisibilityConverter}}"/>

    <StackPanel Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal"
                HorizontalAlignment="Right">

      <Button Content="Start session" Command="{Binding CommandCreateMutants}"/>

    </StackPanel>

    <Expander Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="2" 
              Style="{DynamicResource newExpanderStyle}"
                VerticalAlignment="Top"
                Background="{DynamicResource NormalBrush}"
                Padding="20"
              HorizontalAlignment="Stretch" Height="Auto" Header="Mutation session options" IsExpanded="False">

      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
        </Grid.RowDefinitions>

        <CheckBox Grid.Row="0" Content="Create 20 times more mutants" IsChecked="{Binding CreateMoreMutants}"/>
        <Separator Grid.Row="1"/>
        <TextBlock Grid.Row="2" Text="External files:"
                   ToolTip="Additional files that are required during 
                           testing of mutated assemblies.
                           They will be accessible for the executing mutant."/>
        <DockPanel Grid.Row="3">
          <Button HorizontalAlignment="Left" Content="Browse..."
                  Command="{Binding CommandAdditionalFileToCopy}"/>

        </DockPanel>
        <Separator Grid.Row="4"/>
        <DockPanel Grid.Row="5">
          <TextBlock Text="Mutant testing timeout (seconds):"/>
          <extToolkit:IntegerUpDown Width="70" HorizontalAlignment="Left" Maximum="1000" Minimum="1"
                                     Value="{Binding TimeoutSeconds, Mode=TwoWay}"/>

        </DockPanel>
      </Grid>

    </Expander>
  </Grid>

</Window>